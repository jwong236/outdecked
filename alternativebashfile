#!/bin/bash

# OutDecked - Google Cloud Run Deployment Script
# This script deploys the application to Google Cloud Run with Cloud SQL

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üöÄ OutDecked - Google Cloud Run Deployment${NC}"
echo "=================================================="

# Configuration
REGION=${REGION:-us-central1}
SQL_INSTANCE="outdecked-db"
DATABASE_NAME="outdecked"
SQL_USER="postgres"

# Check if gcloud is installed
if ! command -v gcloud &> /dev/null; then
    echo -e "${RED}‚ùå Google Cloud CLI is not installed.${NC}"
    echo "Please install it from: https://cloud.google.com/sdk/docs/install"
    exit 1
fi

# Check if user is authenticated
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" | grep -q .; then
    echo -e "${YELLOW}‚ö†Ô∏è  You are not authenticated with Google Cloud.${NC}"
    echo "Running: gcloud auth login"
    gcloud auth login
fi

# Get project ID
PROJECT_ID=$(gcloud config get-value project 2>/dev/null)
if [ -z "$PROJECT_ID" ]; then
    echo -e "${RED}‚ùå No project ID set.${NC}"
    echo "Please set a project ID: gcloud config set project YOUR_PROJECT_ID"
    exit 1
fi

echo -e "${GREEN}‚úÖ Using project: ${PROJECT_ID}${NC}"
echo -e "${GREEN}‚úÖ Using region: ${REGION}${NC}"

# Enable required APIs
echo -e "${BLUE}üìã Enabling required APIs...${NC}"
gcloud services enable cloudbuild.googleapis.com
gcloud services enable run.googleapis.com
gcloud services enable containerregistry.googleapis.com
gcloud services enable sqladmin.googleapis.com

# Check if Cloud SQL instance exists
echo -e "${BLUE}üóÑÔ∏è  Checking Cloud SQL instance...${NC}"
if gcloud sql instances describe ${SQL_INSTANCE} --project=${PROJECT_ID} &>/dev/null; then
    echo -e "${GREEN}‚úÖ Cloud SQL instance '${SQL_INSTANCE}' already exists${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Cloud SQL instance not found. Creating...${NC}"
    echo "This will take about 5-10 minutes..."
    
    gcloud sql instances create ${SQL_INSTANCE} \
        --database-version=POSTGRES_15 \
        --tier=db-f1-micro \
        --region=${REGION} \
        --project=${PROJECT_ID}
    
    echo -e "${GREEN}‚úÖ Cloud SQL instance created${NC}"
    
    # Create database
    echo -e "${BLUE}Creating database '${DATABASE_NAME}'...${NC}"
    gcloud sql databases create ${DATABASE_NAME} \
        --instance=${SQL_INSTANCE} \
        --project=${PROJECT_ID}
    
    # Set password
    echo -e "${YELLOW}‚ö†Ô∏è  Please set a secure password for the database${NC}"
    echo "You'll need this password. Save it somewhere safe!"
    gcloud sql users set-password ${SQL_USER} \
        --instance=${SQL_INSTANCE} \
        --prompt-for-password \
        --project=${PROJECT_ID}
fi

# Get the connection name
CONNECTION_NAME="${PROJECT_ID}:${REGION}:${SQL_INSTANCE}"
echo -e "${BLUE}Cloud SQL Connection: ${CONNECTION_NAME}${NC}"

# Build the container
echo -e "${BLUE}üî® Building container image...${NC}"
gcloud builds submit --tag gcr.io/${PROJECT_ID}/outdecked

# Deploy to Cloud Run
echo -e "${BLUE}üöÄ Deploying to Cloud Run...${NC}"
gcloud run deploy outdecked \
    --image gcr.io/${PROJECT_ID}/outdecked \
    --region ${REGION} \
    --platform managed \
    --allow-unauthenticated \
    --memory 1Gi \
    --cpu 1 \
    --max-instances 10 \
    --timeout 300 \
    --set-env-vars FLASK_ENV=production,DB_HOST=/cloudsql/${CONNECTION_NAME},DB_NAME=${DATABASE_NAME},DB_USER=${SQL_USER} \
    --add-cloudsql-instances ${CONNECTION_NAME}

# Get the service URL
SERVICE_URL=$(gcloud run services describe outdecked --region=${REGION} --format="value(status.url)")

echo ""
echo -e "${GREEN}üéâ Deployment successful!${NC}"
echo "=================================================="
echo -e "${BLUE}Service URL: ${SERVICE_URL}${NC}"
echo -e "${BLUE}Health Check: ${SERVICE_URL}/health${NC}"
echo ""
echo -e "${YELLOW}üìù Important:${NC}"
echo "Make sure to set DB_PASSWORD as a secret in Cloud Run:"
echo "1. Go to Cloud Console > Cloud Run > outdecked"
echo "2. Edit & Deploy New Revision"
echo "3. Add secret DB_PASSWORD from Secret Manager"
echo ""
echo -e "${YELLOW}üí° Useful commands:${NC}"
echo "‚Ä¢ View logs: gcloud run services logs read outdecked --region=${REGION}"
echo "‚Ä¢ Connect to DB: gcloud sql connect ${SQL_INSTANCE} --user=${SQL_USER}"
echo "‚Ä¢ Delete service: gcloud run services delete outdecked --region=${REGION}"
echo ""
echo -e "${GREEN}Happy deploying! üÉè${NC}"